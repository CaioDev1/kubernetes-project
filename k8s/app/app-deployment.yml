apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: node-app
        image: caiodev1/node-rest-api:v4
        imagePullPolicy: Always # BY DEFAULT, K8S WON'T FETCH IMAGES FROM DOCKER HUB IF THERE IS SOMEONE ALREADY INSTALLED (EVEN IF IT'S OLD BUT WITH THE SAME TAG)
        resources:
          limits:
            memory: "350Mi"
            cpu: "550m"
        ports:
        - containerPort: 3000
        # envFrom:
        # - configMapRef: # REFERENCES THE APP-CONFIG-MAP ENTITY
        #     name: app-config
        env:
          - name: DB_PASSWORD # DB PASSWORD NOT INCLUDED IN THE CONFIGMAP FOR BEING CONSIDERED AS SENSITIVE DATA 
            valueFrom:
              secretKeyRef:
                name: mysql-pass # K8S MYSQL SECRET ENTITY
                key: password
          - name: DB_URL
            value: mysql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
        volumeMounts: # DECLARES HOW THE VOLUME "app-config-volume" IS APPLIED TO THE CONTAINER
          - name: app-config-volume
            subPath: .env # PATH WITHIN THE VOLUME "app-config-volume" WHICH THE CONTAINER VOLUME SHOULD BE MOUNTED
            mountPath: /app/.env # THE PATH WHICH WILL BE CREATED THE .ENV FILE IN THE CONTAINER WITH THE DATA FROM CONFIGMAP
      volumes:
        - name: app-config-volume
          configMap:
            name: app-config
            items:
              - key: env # CONFIGMAP KEY
                path: .env # POD VOLUME PATH
            